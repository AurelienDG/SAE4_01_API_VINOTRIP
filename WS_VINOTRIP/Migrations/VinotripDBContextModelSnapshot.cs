// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WS_VINOTRIP.Models.EntityFramework;

#nullable disable

namespace WS_VINOTRIP.Migrations
{
    [DbContext(typeof(VinotripDBContext))]
    partial class VinotripDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Avis", b =>
                {
                    b.Property<int>("AvisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AvisId"));

                    b.Property<DateTime>("DateAvis")
                        .HasColumnType("date")
                        .HasColumnName("avi_dateavis");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avi_desvription");

                    b.Property<int>("Note")
                        .HasColumnType("integer")
                        .HasColumnName("avi_note");

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("prs_id");

                    b.Property<string>("Reponse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avi_reponse");

                    b.Property<int>("SejourId")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("avi_titre");

                    b.HasKey("AvisId");

                    b.HasIndex("PersonneId");

                    b.HasIndex("SejourId");

                    b.ToTable("t_e_avis_avi");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.BonCadeau", b =>
                {
                    b.Property<int>("BonCadeauId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bcd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BonCadeauId"));

                    b.Property<string>("CodeReduction")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .HasColumnName("bcd_codereduction");

                    b.Property<DateTime>("DateExpirationBon")
                        .HasColumnType("date")
                        .HasColumnName("bcd_dateexpirationbon");

                    b.HasKey("BonCadeauId");

                    b.ToTable("t_e_boncadeau_bcd");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatParticipant", b =>
                {
                    b.Property<int>("CatParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CatParticipantId"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("vgb_titre");

                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.HasKey("CatParticipantId");

                    b.HasIndex("LienId");

                    b.ToTable("t_e_catparticipant_cpp");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatSejour", b =>
                {
                    b.Property<int>("VignobleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("csj_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VignobleId"));

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("csj_libelle");

                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.HasKey("VignobleId");

                    b.HasIndex("LienId");

                    b.ToTable("t_e_catsejour_csj");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatVignoble", b =>
                {
                    b.Property<int>("VignobleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cvg_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VignobleId"));

                    b.Property<string>("Libelle")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cvg_libelle");

                    b.HasKey("VignobleId");

                    b.ToTable("t_e_catvignoble_cvg");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ChequeCadeau", b =>
                {
                    b.Property<int>("BonCadeauId")
                        .HasColumnType("integer")
                        .HasColumnName("bcd_id");

                    b.Property<int>("montant")
                        .HasColumnType("integer")
                        .HasColumnName("cqc_montant");

                    b.HasKey("BonCadeauId");

                    b.ToTable("t_e_chequecadeau_cqc");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prs_id");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("ctl_datenaissance");

                    b.Property<string>("PrenomClient")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ctl_prenomclient");

                    b.Property<string>("TitreClient")
                        .HasColumnType("char(5)")
                        .HasColumnName("ctl_titreclient");

                    b.HasKey("PersonneId");

                    b.ToTable("t_e_client_clt");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ClientCarte", b =>
                {
                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("ctl_id");

                    b.Property<int>("CarteId")
                        .HasColumnType("integer")
                        .HasColumnName("rcb_id");

                    b.HasKey("PersonneId", "CarteId")
                        .HasName("pk_clc");

                    b.HasIndex("CarteId")
                        .IsUnique();

                    b.ToTable("t_e_clientcarte_clc");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Comporte", b =>
                {
                    b.Property<int>("SejourId")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    b.Property<int>("CatParticipantId")
                        .HasColumnType("integer")
                        .HasColumnName("cpp_id");

                    b.HasKey("SejourId", "CatParticipantId")
                        .HasName("pk_cpt");

                    b.HasIndex("CatParticipantId");

                    b.ToTable("t_j_comporte_cpt");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Compte", b =>
                {
                    b.Property<int>("CompteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompteId"));

                    b.Property<DateTime>("DateConnexion")
                        .HasColumnType("date")
                        .HasColumnName("cmp_dateconnexion");

                    b.Property<bool>("EstAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("cmp_estadmin");

                    b.Property<bool>("EstVerifie")
                        .HasColumnType("boolean")
                        .HasColumnName("cmp_estverifie");

                    b.Property<int>("MdpId")
                        .HasColumnType("integer")
                        .HasColumnName("mdp_id");

                    b.Property<bool>("Newsletter")
                        .HasColumnType("boolean")
                        .HasColumnName("cmp_newsletter");

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<string>("TelCompte")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("cmp_telcompte");

                    b.Property<int>("TypeCompteId")
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    b.HasKey("CompteId");

                    b.HasIndex("MdpId");

                    b.HasIndex("PersonneId");

                    b.HasIndex("TypeCompteId");

                    b.ToTable("t_e_compte_cmp");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Concerne", b =>
                {
                    b.Property<int>("EtapeId")
                        .HasColumnType("integer")
                        .HasColumnName("etp_id");

                    b.Property<int>("ElementId")
                        .HasColumnType("integer")
                        .HasColumnName("ele_id");

                    b.Property<TimeOnly>("Horaire")
                        .HasColumnType("time")
                        .HasColumnName("ccr_horaire");

                    b.HasKey("EtapeId", "ElementId")
                        .HasName("pk_ccr");

                    b.HasIndex("ElementId");

                    b.ToTable("t_j_concerne_ccr");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Contient", b =>
                {
                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.Property<int>("ElementId")
                        .HasColumnType("integer")
                        .HasColumnName("ele_id");

                    b.HasKey("LienId", "ElementId")
                        .HasName("pk_ctn");

                    b.HasIndex("ElementId");

                    b.ToTable("t_j_contient_ctn");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ElementEtape", b =>
                {
                    b.Property<int>("ElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ele_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ElementId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("ele_description");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ele_libelle");

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("prs_id");

                    b.Property<int>("TypeElementId")
                        .HasColumnType("integer")
                        .HasColumnName("tpe_id");

                    b.HasKey("ElementId");

                    b.HasIndex("PersonneId");

                    b.HasIndex("TypeElementId");

                    b.ToTable("t_e_elementetape_ele");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ElementVignoble", b =>
                {
                    b.Property<int>("ElementVignobleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("evg_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ElementVignobleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("evg_description");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("evg_titre");

                    b.Property<int>("VignobleId")
                        .HasColumnType("integer")
                        .HasColumnName("vgb_id");

                    b.HasKey("ElementVignobleId");

                    b.HasIndex("VignobleId");

                    b.ToTable("t_e_elementvignoble_evg");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Etape", b =>
                {
                    b.Property<int>("EtapeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("etp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EtapeId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("etp_description");

                    b.Property<int>("SejourId")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("etp_titre");

                    b.HasKey("EtapeId");

                    b.HasIndex("SejourId");

                    b.ToTable("t_e_etape_etp");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Favori", b =>
                {
                    b.Property<int>("SejourId")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("ctl_id");

                    b.HasKey("SejourId", "PersonneId")
                        .HasName("pk_fav");

                    b.HasIndex("PersonneId");

                    b.ToTable("t_e_favori_fav");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.HistoriqueCadeau", b =>
                {
                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("ctl_id");

                    b.Property<int>("BonCadeauId")
                        .HasColumnType("integer")
                        .HasColumnName("bcd_id");

                    b.Property<string>("TypeCadeau")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("htc_typecadeau");

                    b.HasKey("PersonneId", "BonCadeauId")
                        .HasName("pk_htc");

                    b.HasIndex("BonCadeauId");

                    b.ToTable("t_e_historiquecadeau_htc");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Lien", b =>
                {
                    b.Property<int>("LienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LienId"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("len_type");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("len_url");

                    b.HasKey("LienId");

                    b.ToTable("t_e_lien_len");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienElementVignoble", b =>
                {
                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.Property<int>("ElementVignobleId")
                        .HasColumnType("integer")
                        .HasColumnName("evg_id");

                    b.HasKey("LienId", "ElementVignobleId")
                        .HasName("pk_lev");

                    b.HasIndex("ElementVignobleId");

                    b.ToTable("t_j_lienelementvignoble_lev");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienEtape", b =>
                {
                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.Property<int>("EtapeId")
                        .HasColumnType("integer")
                        .HasColumnName("etp_id");

                    b.HasKey("LienId", "EtapeId")
                        .HasName("pk_lep");

                    b.HasIndex("EtapeId");

                    b.ToTable("t_j_lienetape_lep");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienRouteDesVins", b =>
                {
                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.Property<int>("RouteDesVinsId")
                        .HasColumnType("integer")
                        .HasColumnName("rdv_id");

                    b.HasKey("LienId", "RouteDesVinsId")
                        .HasName("pk_lrv");

                    b.HasIndex("RouteDesVinsId");

                    b.ToTable("t_j_lienroutedesvins_lrv");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienSejour", b =>
                {
                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.Property<int>("SejourId")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    b.HasKey("LienId", "SejourId")
                        .HasName("pk_lsj");

                    b.HasIndex("SejourId");

                    b.ToTable("t_j_liensejour_lsj");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.MotDePasse", b =>
                {
                    b.Property<int>("MdpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mdp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MdpId"));

                    b.Property<string>("Mdp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mdp_mdp");

                    b.HasKey("MdpId");

                    b.ToTable("t_e_motdepasse_mdp");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Panier", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pnr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonneId"));

                    b.Property<int>("CompteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateSejour")
                        .HasColumnType("date")
                        .HasColumnName("pnr_datesejour");

                    b.Property<int>("NbAdultes")
                        .HasColumnType("integer")
                        .HasColumnName("pnr_nbadultes");

                    b.Property<int>("NbChambres")
                        .HasColumnType("integer")
                        .HasColumnName("pnr_nbchambres");

                    b.Property<int>("NbEnfants")
                        .HasColumnType("integer")
                        .HasColumnName("pnr_nbenfants");

                    b.Property<bool>("Offert")
                        .HasColumnType("boolean")
                        .HasColumnName("pnr_offert");

                    b.Property<decimal>("PrixTotal")
                        .HasColumnType("numeric(9,2)")
                        .HasColumnName("pnr_prixtotal");

                    b.Property<int>("SejourId")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    b.HasKey("PersonneId");

                    b.HasIndex("CompteId");

                    b.HasIndex("SejourId");

                    b.ToTable("t_e_panier_pnr");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Partenaire", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prs_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonneId"));

                    b.Property<string>("TelPartenaire")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("ptn_telpartenaire");

                    b.HasKey("PersonneId");

                    b.ToTable("t_e_partenaire_ptn");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireActivite", b =>
                {
                    b.Property<int>("PartenaireActiviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pta_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PartenaireActiviteId"));

                    b.Property<string>("LieuRdv")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pta_lieurdv");

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("ptn_id");

                    b.Property<string>("TypeActivite")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("pta_typeactivite");

                    b.HasKey("PartenaireActiviteId");

                    b.HasIndex("PersonneId");

                    b.ToTable("t_e_partenaireactivite_pta");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireCave", b =>
                {
                    b.Property<int>("PartenaireCaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ptc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PartenaireCaveId"));

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("ptn_id");

                    b.Property<string>("TypeDegustation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ptc_typedegustation");

                    b.HasKey("PartenaireCaveId");

                    b.HasIndex("PersonneId");

                    b.ToTable("t_e_partenairecave_ptc");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireHebergement", b =>
                {
                    b.Property<int>("PartenaireHebergementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pth_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PartenaireHebergementId"));

                    b.Property<int>("EtoilesHebergement")
                        .HasColumnType("integer")
                        .HasColumnName("pth_etoileshebergement");

                    b.Property<int>("NbChambre")
                        .HasColumnType("integer")
                        .HasColumnName("pth_nbchambre");

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("ptn_id");

                    b.Property<string>("TypeHebergement")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("pth_typehebergement");

                    b.HasKey("PartenaireHebergementId");

                    b.HasIndex("PersonneId");

                    b.ToTable("t_e_partenairehebergement_pth");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireRestaurant", b =>
                {
                    b.Property<int>("PartenaireRestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ptr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PartenaireRestaurantId"));

                    b.Property<int>("EtoilesRestaurant")
                        .HasColumnType("integer")
                        .HasColumnName("ptr_etoilesrestaurant");

                    b.Property<int>("PersonneId")
                        .HasColumnType("integer")
                        .HasColumnName("ptn_id");

                    b.Property<string>("Specialite")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("ptr_specialite");

                    b.Property<string>("TypeCuisine")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("ptr_typecuisine");

                    b.HasKey("PartenaireRestaurantId");

                    b.HasIndex("PersonneId");

                    b.ToTable("t_e_partenairerestaurant_ptr");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Personne", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prs_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PersonneId"));

                    b.Property<string>("MailPersonne")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prs_mailpersonne");

                    b.Property<string>("NomPersonne")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prs_nompersonne");

                    b.HasKey("PersonneId");

                    b.ToTable("t_e_personne_prs");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.RefCarteBancaire", b =>
                {
                    b.Property<int>("CarteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rcb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarteId"));

                    b.Property<DateTime>("DateExpirationCarte")
                        .HasColumnType("date")
                        .HasColumnName("rcb_dateexpirationcarte");

                    b.Property<string>("NomCarte")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("rcb_nomcarte");

                    b.Property<string>("NumCarte")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("rcb_numcarte");

                    b.HasKey("CarteId");

                    b.ToTable("t_e_refcartebancaire_rcb");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Reported", b =>
                {
                    b.Property<int>("AvisId")
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    b.Property<int>("CompteId")
                        .HasColumnType("integer")
                        .HasColumnName("cmp_id");

                    b.Property<bool>("A_Signale")
                        .HasColumnType("boolean")
                        .HasColumnName("rep_a_signale");

                    b.HasKey("AvisId", "CompteId")
                        .HasName("pk_rep");

                    b.HasIndex("CompteId");

                    b.ToTable("t_j_reported_rep");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.RouteDesVins", b =>
                {
                    b.Property<int>("RouteDesVinsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rdv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RouteDesVinsId"));

                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("rdv_titre");

                    b.Property<int>("VignobleId")
                        .HasColumnType("integer")
                        .HasColumnName("vgb_id");

                    b.HasKey("RouteDesVinsId");

                    b.HasIndex("VignobleId");

                    b.ToTable("t_e_routedesvins_rdv");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Sejour", b =>
                {
                    b.Property<int>("SejourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SejourId"));

                    b.Property<int>("CatSejourId")
                        .HasColumnType("integer")
                        .HasColumnName("csj_id");

                    b.Property<int>("CatVignobleId")
                        .HasColumnType("integer")
                        .HasColumnName("cvg_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sjr_description");

                    b.Property<bool>("Est_Valide")
                        .HasColumnType("boolean")
                        .HasColumnName("sjr_est_valide");

                    b.Property<decimal>("NbJour")
                        .HasColumnType("numeric(3,2)")
                        .HasColumnName("sjr_nbjour");

                    b.Property<int>("NbNuit")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_nbnuit");

                    b.Property<decimal>("Prix")
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("sjr_prix");

                    b.Property<int>("Promotion")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_promotion");

                    b.Property<int>("RouteVinId")
                        .HasColumnType("integer")
                        .HasColumnName("rdv_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sjr_titre");

                    b.HasKey("SejourId")
                        .HasName("pk_sjr");

                    b.HasIndex("CatSejourId");

                    b.HasIndex("CatVignobleId");

                    b.HasIndex("RouteVinId");

                    b.ToTable("t_e_sejour_sjr");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.SejourCadeau", b =>
                {
                    b.Property<int>("BonCadeauId")
                        .HasColumnType("integer")
                        .HasColumnName("bcd_id");

                    b.Property<string>("ChoixDestination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("sjc_choixdestination");

                    b.Property<int>("SejourId")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    b.HasKey("BonCadeauId");

                    b.HasIndex("SejourId");

                    b.ToTable("t_e_sejourcadeau_sjc");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.TypeCompte", b =>
                {
                    b.Property<int>("TypeCompteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tpc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeCompteId"));

                    b.Property<string>("LibelleTypeCompte")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tpc_libelletypecompte");

                    b.HasKey("TypeCompteId");

                    b.ToTable("t_e_typecompte_tpc");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.TypeElement", b =>
                {
                    b.Property<int>("TypeElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tee_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeElementId"));

                    b.Property<string>("LibelleTypeElement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tee_libelletypecompte");

                    b.HasKey("TypeElementId");

                    b.ToTable("t_e_typeelementetape_tee");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Vignoble", b =>
                {
                    b.Property<int>("VignobleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vgb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VignobleId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vgb_description");

                    b.Property<int>("LienId")
                        .HasColumnType("integer")
                        .HasColumnName("len_id");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("vgb_titre");

                    b.HasKey("VignobleId");

                    b.HasIndex("LienId");

                    b.ToTable("t_e_vignoble_vgb");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Avis", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Personne", "PersonneAvis")
                        .WithMany("AvisPersonne")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Sejour", "SejourAvis")
                        .WithMany("AvisSejour")
                        .HasForeignKey("SejourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonneAvis");

                    b.Navigation("SejourAvis");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatParticipant", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienCatParticipant")
                        .WithMany("CatParticipantLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LienCatParticipant");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatSejour", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienCatSejour")
                        .WithMany("CatSejourLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LienCatSejour");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ChequeCadeau", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.BonCadeau", "BonCadeauChequeCadeau")
                        .WithMany("ChequeCadeauBonCadeau")
                        .HasForeignKey("BonCadeauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BonCadeauChequeCadeau");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Client", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Personne", "PersonneClient")
                        .WithMany("ClientPersonne")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonneClient");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ClientCarte", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.RefCarteBancaire", "RefCarteBancaireClientCarte")
                        .WithOne("ClientCarteRefCarteBancaire")
                        .HasForeignKey("WS_VINOTRIP.Models.EntityFramework.ClientCarte", "CarteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Client", "ClientClientCarte")
                        .WithMany("ClientCarteClient")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientClientCarte");

                    b.Navigation("RefCarteBancaireClientCarte");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Comporte", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.CatParticipant", "CatParticipantComporte")
                        .WithMany("ComporteCatParticipant")
                        .HasForeignKey("CatParticipantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cpt_cpp");

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Sejour", "SejourComporte")
                        .WithMany("ComporteSejour")
                        .HasForeignKey("SejourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cpt_sjr");

                    b.Navigation("CatParticipantComporte");

                    b.Navigation("SejourComporte");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Compte", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.MotDePasse", "MDPCompte")
                        .WithMany("CompteMDP")
                        .HasForeignKey("MdpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Client", "ClientCompte")
                        .WithMany("CompteClient")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.TypeCompte", "TypeCompteCompte")
                        .WithMany("CompteTypeCompte")
                        .HasForeignKey("TypeCompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientCompte");

                    b.Navigation("MDPCompte");

                    b.Navigation("TypeCompteCompte");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Concerne", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.ElementEtape", "ElementEtapeConcerne")
                        .WithMany("ConcerneElementEtape")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ccr_ele");

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Etape", "EtapeConcerne")
                        .WithMany("ConcerneEtape")
                        .HasForeignKey("EtapeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ccr_etp");

                    b.Navigation("ElementEtapeConcerne");

                    b.Navigation("EtapeConcerne");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Contient", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.ElementEtape", "ElementEtapeContient")
                        .WithMany("ContientElementEtape")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienContient")
                        .WithMany("ContientLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementEtapeContient");

                    b.Navigation("LienContient");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ElementEtape", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Partenaire", "PartenaireElementEtape")
                        .WithMany("ElementsEtapePartenaire")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.TypeElement", "TypeElementElementEtape")
                        .WithMany("ElementEtapeTypeElement")
                        .HasForeignKey("TypeElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartenaireElementEtape");

                    b.Navigation("TypeElementElementEtape");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ElementVignoble", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Vignoble", "VignobleElementVignoble")
                        .WithMany("ElementVignobleVignoble")
                        .HasForeignKey("VignobleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VignobleElementVignoble");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Etape", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Sejour", "SejourEtape")
                        .WithMany("EtapesSejour")
                        .HasForeignKey("SejourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SejourEtape");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Favori", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Client", "ClientFavori")
                        .WithMany("FavoriClient")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Sejour", "SejourFavori")
                        .WithMany("FavoriSejour")
                        .HasForeignKey("SejourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientFavori");

                    b.Navigation("SejourFavori");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.HistoriqueCadeau", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.BonCadeau", "BonCadeauHistoriqueCadeau")
                        .WithMany("HistoriqueCadeauBonCadeau")
                        .HasForeignKey("BonCadeauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Client", "ClientHistoriqueCadeau")
                        .WithMany("HistoriqueCadeauClient")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BonCadeauHistoriqueCadeau");

                    b.Navigation("ClientHistoriqueCadeau");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienElementVignoble", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.ElementVignoble", "ElementVignobleLienElementVignoble")
                        .WithMany("LienElementVignobleElementVignoble")
                        .HasForeignKey("ElementVignobleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienLienElementVignoble")
                        .WithMany("LienElementVignobleLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementVignobleLienElementVignoble");

                    b.Navigation("LienLienElementVignoble");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienEtape", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Etape", "EtapeLienEtape")
                        .WithMany("LienEtapeEtape")
                        .HasForeignKey("EtapeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienLienEtape")
                        .WithMany("LienEtapeLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EtapeLienEtape");

                    b.Navigation("LienLienEtape");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienRouteDesVins", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienLienRouteDesVins")
                        .WithMany("LienRouteDesVinsLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.RouteDesVins", "RouteDesVinsLienRouteDesVins")
                        .WithMany("LienRouteDesVinsRouteDesVins")
                        .HasForeignKey("RouteDesVinsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LienLienRouteDesVins");

                    b.Navigation("RouteDesVinsLienRouteDesVins");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.LienSejour", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienLienSejour")
                        .WithMany("LienSejourLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Sejour", "SejourLienSejour")
                        .WithMany("LienSejourSejour")
                        .HasForeignKey("SejourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LienLienSejour");

                    b.Navigation("SejourLienSejour");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Panier", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Compte", "ComptePanier")
                        .WithMany("PanierCompte")
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Sejour", "SejourPanier")
                        .WithMany("PanierSejour")
                        .HasForeignKey("SejourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComptePanier");

                    b.Navigation("SejourPanier");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireActivite", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Partenaire", "PartenairePartenaireActivite")
                        .WithMany("PartenairesActivitePartenaire")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartenairePartenaireActivite");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireCave", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Partenaire", "PartenairePartenaireCave")
                        .WithMany("PartenairesCavePartenaire")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartenairePartenaireCave");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireHebergement", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Partenaire", "PartenairePartenaireHebergement")
                        .WithMany("PartenairesHebergementPartenaire")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartenairePartenaireHebergement");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.PartenaireRestaurant", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Partenaire", "PartenairePartenaireRestaurant")
                        .WithMany("PartenaireRestaurantPartenaire")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartenairePartenaireRestaurant");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Reported", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Avis", "AvisReported")
                        .WithMany("ReportedAvis")
                        .HasForeignKey("AvisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Compte", "CompteReported")
                        .WithMany("ReportedCompte")
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvisReported");

                    b.Navigation("CompteReported");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.RouteDesVins", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Vignoble", "VignobleRouteDesVins")
                        .WithMany("RouteDesVinsVignoble")
                        .HasForeignKey("VignobleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VignobleRouteDesVins");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Sejour", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.CatSejour", "SejourCatSejour")
                        .WithMany("CatSejoursSejour")
                        .HasForeignKey("CatSejourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sjr_csj");

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.CatVignoble", "SejourCatVignoble")
                        .WithMany("CatVignobleSejour")
                        .HasForeignKey("CatVignobleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sjr_cvg");

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.RouteDesVins", "RouteDesVinsSejour")
                        .WithMany("SejourRouteDesVins")
                        .HasForeignKey("RouteVinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sjr_rdv");

                    b.Navigation("RouteDesVinsSejour");

                    b.Navigation("SejourCatSejour");

                    b.Navigation("SejourCatVignoble");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.SejourCadeau", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.BonCadeau", "BonCadeauSejourCadeau")
                        .WithMany("SejourCadeauBonCadeau")
                        .HasForeignKey("BonCadeauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Sejour", "SejourSejourCadeau")
                        .WithMany("SejourCadeauSejour")
                        .HasForeignKey("SejourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BonCadeauSejourCadeau");

                    b.Navigation("SejourSejourCadeau");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Vignoble", b =>
                {
                    b.HasOne("WS_VINOTRIP.Models.EntityFramework.Lien", "LienVignoble")
                        .WithMany("VignobleLien")
                        .HasForeignKey("LienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LienVignoble");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Avis", b =>
                {
                    b.Navigation("ReportedAvis");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.BonCadeau", b =>
                {
                    b.Navigation("ChequeCadeauBonCadeau");

                    b.Navigation("HistoriqueCadeauBonCadeau");

                    b.Navigation("SejourCadeauBonCadeau");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatParticipant", b =>
                {
                    b.Navigation("ComporteCatParticipant");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatSejour", b =>
                {
                    b.Navigation("CatSejoursSejour");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.CatVignoble", b =>
                {
                    b.Navigation("CatVignobleSejour");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("ClientCarteClient");

                    b.Navigation("CompteClient");

                    b.Navigation("FavoriClient");

                    b.Navigation("HistoriqueCadeauClient");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Compte", b =>
                {
                    b.Navigation("PanierCompte");

                    b.Navigation("ReportedCompte");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ElementEtape", b =>
                {
                    b.Navigation("ConcerneElementEtape");

                    b.Navigation("ContientElementEtape");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.ElementVignoble", b =>
                {
                    b.Navigation("LienElementVignobleElementVignoble");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Etape", b =>
                {
                    b.Navigation("ConcerneEtape");

                    b.Navigation("LienEtapeEtape");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Lien", b =>
                {
                    b.Navigation("CatParticipantLien");

                    b.Navigation("CatSejourLien");

                    b.Navigation("ContientLien");

                    b.Navigation("LienElementVignobleLien");

                    b.Navigation("LienEtapeLien");

                    b.Navigation("LienRouteDesVinsLien");

                    b.Navigation("LienSejourLien");

                    b.Navigation("VignobleLien");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.MotDePasse", b =>
                {
                    b.Navigation("CompteMDP");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Partenaire", b =>
                {
                    b.Navigation("ElementsEtapePartenaire");

                    b.Navigation("PartenaireRestaurantPartenaire");

                    b.Navigation("PartenairesActivitePartenaire");

                    b.Navigation("PartenairesCavePartenaire");

                    b.Navigation("PartenairesHebergementPartenaire");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Personne", b =>
                {
                    b.Navigation("AvisPersonne");

                    b.Navigation("ClientPersonne");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.RefCarteBancaire", b =>
                {
                    b.Navigation("ClientCarteRefCarteBancaire")
                        .IsRequired();
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.RouteDesVins", b =>
                {
                    b.Navigation("LienRouteDesVinsRouteDesVins");

                    b.Navigation("SejourRouteDesVins");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Sejour", b =>
                {
                    b.Navigation("AvisSejour");

                    b.Navigation("ComporteSejour");

                    b.Navigation("EtapesSejour");

                    b.Navigation("FavoriSejour");

                    b.Navigation("LienSejourSejour");

                    b.Navigation("PanierSejour");

                    b.Navigation("SejourCadeauSejour");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.TypeCompte", b =>
                {
                    b.Navigation("CompteTypeCompte");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.TypeElement", b =>
                {
                    b.Navigation("ElementEtapeTypeElement");
                });

            modelBuilder.Entity("WS_VINOTRIP.Models.EntityFramework.Vignoble", b =>
                {
                    b.Navigation("ElementVignobleVignoble");

                    b.Navigation("RouteDesVinsVignoble");
                });
#pragma warning restore 612, 618
        }
    }
}
